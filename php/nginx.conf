worker_processes  1;
 
error_log  /Library/Logs/nginx/error.log debug;
 
events {
    worker_connections  1024;
}
 
http {
    include             mime.types;
    default_type        application/octet-stream;
 
    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';
 
    access_log  /Library/Logs/nginx/access.log  main;
 
    sendfile            on;
 
    keepalive_timeout   65;
 
    index index.html index.php;
 
    include /usr/local/etc/nginx/sites-enabled/*; 
}

		    # added by liw for cache
        fastcgi_cache_path /var/cache/nginx levels=1:2 keys_zone=my_cache:512m max_size=20G inactive=1d;
        fastcgi_cache_key "$scheme$request_method$host$request_uri$arg_id";
        fastcgi_cache_use_stale error timeout updating http_500;
        #忽略一切 nocache 申明，避免不缓存伪静态等
        fastcgi_ignore_headers Cache-Control Expires Set-Cookie;


    #启用fastcgi_cache 开始 by liw

location ~ \.php$ {

try_files $uri =404;
fastcgi_pass unix:/tmp/php-cgi-74.sock;
fastcgi_index index.php;
fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
include fastcgi_params;
fastcgi_buffers 16 16k;
fastcgi_busy_buffers_size 64k;
fastcgi_buffer_size 32k;
fastcgi_keep_conn on;

#新增的缓存规则
add_header X-Cache "$upstream_cache_status From $host";
fastcgi_cache my_cache;
add_header Nginx-Cache "$upstream_cache_status";
add_header X-Frame-Options SAMEORIGIN; # 只允许本站用 frame 来嵌套
add_header X-Content-Type-Options nosniff; # 禁止嗅探文件类型
add_header X-XSS-Protection "1; mode=block"; # XSS 保护
etag on;
fastcgi_cache_valid 200 301 302 6h;
}

#启用fastcgi_cache 结束